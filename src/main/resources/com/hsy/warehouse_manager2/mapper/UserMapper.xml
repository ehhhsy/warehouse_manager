<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hsy.warehouse_manager2.mapper.UserMapper">
<!--    实现根据id查询用户   别名：首字母小写 User -》user -->
    <select id="findUserById" resultType="com.hsy.warehouse_manager2.pojo.User">
        select * from user_info where user_code=#{userCode} and is_delete=0
    </select>

<!--
        //查询用户的行数
     public Integer findUserRowCount(User user);
    -->
    <select id="findUserRowCount" resultType="integer">
        select count(*) from user_info
        <where>
            <if test="userCode !=null and userCode !=''"> and user_code like concat('%',#{userCode},'%')</if>
            <if test="userType !=null and userType!=''">
                and user_Type=#{userType}
            </if>
            <if test="userState !=null and userState!=''">
                and user_state=#{userState}
            </if>
            and is_delete=0
</where>
    </select>
    <!-- //分页查询用户的方法
     public List<User> findUserByPage(@Param("page") Page page,@Param("user") User user);
 -->
    <select id="findUserByPage" resultType="user">
        select t1.*,t2.user_Code getCode
        from user_info t1,user_info t2
        where t1.create_by =t2.user_id and t1.is_delete=0
        <if test="user.userCode !=null and user.userCode !=''">
          and t1.user_code like concat('%',#{user.userCode},'%')
          </if>
        <if test="user.userType !=null and user.userType!=''">
            and t1.user_Type=#{user.userType}
        </if>
        <if test="user.userState !=null and user.userState!=''">
            and t1.user_state=#{user.userState}
        </if>
        order by t1.create_time desc
        limit #{page.limitIndex},#{page.pageSize}
    </select>

<!--    public int insertUser(User user);-->
    <insert id="insertUser" >
        insert into user_info values (
                    null,#{userCode},#{userName},#{userPwd},null,0,0,#{createBy},now(),null,null
                                     )
    </insert>

<!-- 根据用户id修改用户状态   public int setStateByUid(Integer id,String userState);-->
    <update id="setStateByUid">
        update user_info set user_state=#{userState} where user_id=#{id}
    </update>

<!--
        //根据用户id修改用户is_delete=1 删除
        public int setIsDeleteByUids(@Param("userIdList") List<Integer> userIdList);
-->
    <update id="setIsDeleteByUids">
        update user_info set is_delete =1 where user_id in
            <foreach collection="userIdList" open="(" close=")" separator="," item="userId">
                #{userId}
            </foreach>
    </update>

<!--
    //根据用户id修改用户名称
    public int setUserNameByUser(User user);
-->
    <update id="setUserNameByUser">
        update user_info set user_name=#{userName},update_by=#{updateBy},update_Time=now()
                         where user_id=#{userId}
    </update>

<!--
    //根据用户id重置密码为123456
public int resetPwdByUserId(@Param("userId") Integer userId,@Param("password") String password);
-->
    <update id="resetPwdByUserId">
        update user_info set user_pwd=#{password} where user_id=#{userId}
    </update>


</mapper>
  

